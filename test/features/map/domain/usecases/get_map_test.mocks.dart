// Mocks generated by Mockito 5.4.6 from annotations
// in weather_forecasting/test/features/map/domain/usecases/get_map_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_forecasting/weather_forecasting.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMapModel_0 extends _i1.SmartFake implements _i2.MapModel {
  _FakeMapModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMarkerInfoModel_1 extends _i1.SmartFake
    implements _i2.MarkerInfoModel {
  _FakeMarkerInfoModel_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MapRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapRemoteDataSource extends _i1.Mock
    implements _i2.MapRemoteDataSource {
  MockMapRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.MapModel> getMaps(
    String? mapType,
    int? x,
    int? y,
    int? zoom,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMaps, [mapType, x, y, zoom]),
            returnValue: _i3.Future<_i2.MapModel>.value(
              _FakeMapModel_0(
                this,
                Invocation.method(#getMaps, [mapType, x, y, zoom]),
              ),
            ),
          )
          as _i3.Future<_i2.MapModel>);

  @override
  _i3.Future<_i2.MarkerInfoModel> getMarkerInfo(_i2.LatLong? latLong) =>
      (super.noSuchMethod(
            Invocation.method(#getMarkerInfo, [latLong]),
            returnValue: _i3.Future<_i2.MarkerInfoModel>.value(
              _FakeMarkerInfoModel_1(
                this,
                Invocation.method(#getMarkerInfo, [latLong]),
              ),
            ),
          )
          as _i3.Future<_i2.MarkerInfoModel>);
}
